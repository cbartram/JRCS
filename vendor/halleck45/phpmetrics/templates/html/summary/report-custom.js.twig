{% autoescape false %}
<script type="text/javascript">



    function updateCustomChart() {
        chartCustom(xAxis, yAxis, rAxis);
        document.getElementById('title-custom').innerHTML = textify(xAxis) + ' / ' + textify(yAxis);
    };


    function chartCustom(xData, yData, rData) {


        var chart;
        document.getElementById('svg-custom').innerHTML = '<svg />';
        nv.addGraph(function() {
            chart = nv.models.scatterChart()
                    .showDistX(true)
                    .showDistY(true)
                    .showLegend(false)
                    .useVoronoi(false)
                    .color(d3.scale.category10().range())
                    .transitionDuration(300)
            ;

            chart.xAxis.tickFormat(d3.format('.02f')).axisLabel(textify(xData));
            chart.yAxis.tickFormat(d3.format('.02f')).axisLabel(textify(yData));
            chart.tooltipContent(function(key, x, y, e, graph) {
                return '<h2>' + e.point.title + '</h2>';
            });
            chart.scatter.useVoronoi(false);


            d3.select("#svg-custom").select("svg")
                    .attr("width",380)
                    .attr("height",300)
                    .datum(mapDatas(data))
                    .call(chart);

            nv.utils.windowResize(chart.update);

            chart.dispatch.on('stateChange', function(e) { ('New State:', JSON.stringify(e)); });


            // Save as
            var svg  = document.getElementById('svg-custom').childNodes[0],
                    xml  = new XMLSerializer().serializeToString(svg),
                    xmldata = btoa(xml),
                    img  = new Image();
            document.getElementById('btn-save-custom').href =  'data:application/octet-stream;base64,' + xmldata;


            return chart;
        });


        function mapDatas(root) {
            var results = [
                { key: textify(xData) + " / " + textify(yData) + " chart", "values": [] }
            ];
            var i;
            for(i in root) {
                var e = root[i];
                results[0].values.push({
                    "title": e.filename
                    , "x": Math.max(0,parseFloat(e[xData]))
                    , "y": Math.max(0,parseFloat(e[yData]))
                    , size: Math.max(0,parseFloat(e[rData]))
                    , shape: 'round'
                });
            }
            return results;
        }

    }


</script>
{% endautoescape %}