<html>
<head>
    <title>PhpMetrics report {% include 'version.html.twig' %} - by Jean-François Lépine</title>
    <meta charset="utf-8">
    {% include "assets/favicon.html.twig" %}
    <style type="text/css">
        {# including assets. Deal with offline mode #}
        {% if offline %}
            {% include "assets/nv.d3.css.twig" %}
            {% include "assets/d3js-radar.css.twig" %}
        {% endif %}
        {% include "assets/styles.css.twig" %}
    </style>
    {# including assets. Deal with offline mode #}
    {% if not offline %}
        <link rel="stylesheet" type="text/css" href="http://nvd3.org/assets/css/nv.d3.css">
        <link rel="stylesheet" type="text/css" href="https://cdn.rawgit.com/alangrafu/radar-chart-d3/master/src/radar-chart.min.css">
    {% endif %}
</head>

<body>

<div class="container">



    <h1 id="title">{{ title }}</h1>

    <div class="row">
        <div class="well accessibility-box">
            <label>
                <input type="checkbox" onclick="toggleAccessibility()"> I'm colorblind
            </label>
        </div>

        <div class="menu-box">
            <ul id="menu" class="menu" >
                <li id="link-overview" class="active"><a >Overview</a></li>
                <li id="link-score"><a >Evaluation</a></li>
                <li id="link-relations"><a  >Relations map</a></li>
                <li id="link-repartition"><a  >Repartition</a></li>
                <li id="link-explore"><a >Explore</a></li>
                {{ extensions_menu(extensions) }}
                <li id="link-help"><a  >Help</a></li>
            </ul>
        </div>


    </div>


    <div class="tab-content row">


        <!-- General details -->
        <div class="row tab active" id="overview">
            <div class="col-3">
                <h3>Evaluation</h3>
                <small><a id="btn-save-maintainability" download="phpmetric-maintainability.svg">Download (as SVG)</a> | <a onclick="return zoom('svg-maintainability', updateMaintainabilityChart);">zoom</a></small>
                <div id="svg-maintainability"><svg /></div>

                <div class="well ">

                    <h4>Information</h4>
                    <p>
                        Each file is symbolized by a circle.
                        Size of the circle represents the Cyclomatic complexity.
                        Color of the circle represents the Maintainability Index.
                    </p>
                    <p>Large red circles will be probably hard to maintain.</p>
                </div>

            </div>
            <div class=" col-3">

                <h3 id="title-custom">Custom chart</h3>
                <small><a id="btn-save-custom" download="phpmetric-custom.svg">Download (as SVG)</a> | <a onclick="return zoom('svg-custom', updateCustomChart);">zoom</a></small>
                <div id="svg-custom"><svg /></div>

                <div class="well">
                    <h4>Configuration</h4>
                    <p>
                        Select metrics you want to display in chart.
                    </p>
                    <table class="table table-condensed table-bordered">
                        <tr>
                            <td>X Axis</td>
                            <td>Y Axis</td>
                            <td>Diameter</td>
                        </tr>
                        <tr>
                            <td>
                                <select id="xAxis" class="form-control" onchange="xAxis = this.value; updateCustomChart();">
                                    {% for key in keys|sort %}
                                        <option value="{{key}}">{{key|textify}} </option>
                                    {% endfor %}
                                </select>
                            </td>
                            <td>
                                <select id="yAxis" class="form-control" onchange="yAxis = this.value; updateCustomChart();">
                                    {% for key in keys|sort %}
                                        <option value="{{key}}">{{key|textify}} </option>
                                    {% endfor %}
                                </select>
                            </td>
                            <td>
                                <select id="rAxis" class="form-control" onchange="rAxis = this.value; updateCustomChart();">
                                    {% for key in keys|sort %}
                                        <option value="{{key}}">{{key|textify}} </option>
                                    {% endfor %}
                                </select>
                            </td>
                        </tr>
                    </table>
                </div>

            </div>
            <div class="col-3">
                <h3>Abstractness / Instability</h3>
                <small><a id="btn-save-abstractness" download="phpmetric-abstractness.svg">Download (as SVG)</a> | <a onclick="return zoom('svg-abstractness', updateAbstractnessChart);">zoom</a></small>
                <div id="svg-abstractness"><svg /></div>
            </div>
        </div>
        <!-- end: General details -->

        <!-- Score -->
        <div class="tab" id="score">
            <div class="col-sm-12">
                <h3>Score</h3>

                <div class="col-6">
                    <div id="chart-score"></div>
                </div>

                <div class="col-6">
                    <p>
                        This score is not absolute. This chart is a comparison of your project relative to a representative average of recent PHP projects.
                    </p>
                    <p>
                        Each score is calculated from <acronym title="Cyclomatic complexity, Halstead metrics, Maintainability Index, Comment weight, Difficulty, Logical lines of code...">various criterias</acronym> from {{ results |length }} files in your projects.
                        Your score is a note between 0 (poor) and {{ constant('Hal\\Application\\Score\\Scoring::MAX') }} (excellent).
                    </p>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Factor</th>
                                <th>Score</th>
                            </tr>
                        </thead>
                        <tbody>
                        {%  for name,value in scores %}
                            <tr>
                                <td>{{ name }}</td>
                                <td>{{ value }} / {{ constant('Hal\\Application\\Score\\Scoring::MAX') }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                    <p>
                        <strong>This score does not replace the judgement of a human.</strong>
                    </p>
                </div>
            </div>
        </div>
        <!-- end: Score -->

        <!-- Relations -->
        <div class="tab" id="relations">
            <h3>Relations</h3>
            <div class="col-sm-12">
                <div class="well">
                    <p>
                        Class uses another when it calls, constructs, types hint, extends or implements it.
                    </p>
                    <ul>
                        <li><span class="badge relation-source">Used by</span> : this class is used by hovered element.</li>
                        <li><span class="badge relation-target">Uses</span> : this class uses hovered element.</li>
                    </ul>

                </div>
                <small><a id="btn-save-relations" download="phpmetric-relations.svg">Download (as SVG)</a></small>
                <div class="svg-main" id="svg-relations"><svg /></div>

            </div>
        </div>
        <!-- end: Relations -->


        <!-- Tabular datas -->
        <div class="tab" id="explore">
            <div class="col-sm-12">
                <h3>Explore</h3>
                <p>
                    <select id="select-display-tabular">
                        <option value="all" selected="selected">Display metrics</option>
                        <option value="essential">Essential</option>
                        <option value="all">All</option>
                    </select>
                </p>
                <div id="chart-tableview"></div>
            </div>
        </div>
        <!-- end: Tabular datas -->


        <!-- Volume -->
        <div class="tab" id="repartition">
            <h3>Repartition</h3>
            <div class="col-3">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td>Files</td>
                            <td>{{ results |length }}</td>
                        </tr>
                        <tr>
                            <td>Lines of code</td>
                            <td>
                                {{ bounds.getSum('loc') }}
                                {% if root.bounds.getSum('noc') > 0 %}
                                    <span class="more">({{ (bounds.getSum('loc') / bounds.getSum('noc')) |round }} by class,
                                        {{ (bounds.getSum('loc') / bounds.getSum('nom')) |round }} by method)</span>
                                {%  endif %}
                            </td>
                        </tr>
                        <tr>
                            <td>Logical lines of code</td>
                            <td>
                                {{ bounds.getSum('logicalLoc') }}
                                {% if root.bounds.getSum('noc') > 0 %}
                                    <span class="more">({{ (bounds.getSum('logicalLoc') / bounds.getSum('noc')) |round }} by class,
                                        {{ (bounds.getSum('logicalLoc') / bounds.getSum('nom')) |round }} by method)</span>
                                {%  endif %}
                            </td>
                        </tr>
                        <tr>
                            <td>Classes</td>
                            <td>{{ root.bounds.getSum('noc') }}
                                {% if root.bounds.getSum('noc') > 0 %}
                                    <div>
                                        <span class="more">
                                            {{ root.bounds.getSum('noi')|default(0) }} interfaces ({{ (root.bounds.getSum('noi') / root.bounds.getSum('noc') * 100) |round(0) }} %)
                                        </span>
                                    </div>
                                    <div>
                                        <span class="more">
                                            {{ root.bounds.getSum('nocc')|default(0) }} concrete classes ({{ (root.bounds.getSum('nocc') / root.bounds.getSum('noc') * 100) |round(0) }} %)
                                        </span>
                                    </div>
                                    <div>
                                        <span class="more">
                                            {{ root.bounds.getSum('noca')|default(0) }} abstract classes ({{ (root.bounds.getSum('noca') / root.bounds.getSum('noc') * 100) |round(0) }} %)
                                        </span>
                                    </div>
                                    <div>
                                        <span class="more">
                                            {{ root.bounds.getSum('noc-anon')|default(0) }} anonymous classes ({{ (root.bounds.getSum('noc-anon') / root.bounds.getSum('noc') * 100) |round(0) }} %)
                                        </span>
                                    </div>
                                {% endif %}
                            </td>
                        </tr>

                        <tr>
                            <td>Methods</td>
                            <td>
                                {{ bounds.getSum('nom') }}
                                {% if root.bounds.getSum('noc') > 0 %}
                                    <span class="more">({{ (bounds.getSum('nom') / bounds.getSum('noc')) |round(1) }} by class )</span>
                                {%  endif %}
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-3">
                <table class="table table-striped">
                    <tbody>
                    <tr>
                        <td>Relative system complexity</td>
                        <td>{{ root.bounds.getAverage('rsysc') }}</td>
                    </tr>
                    <tr>
                        <td>Relative data complexity</td>
                        <td>{{ root.bounds.getAverage('rdc') }}</td>
                    </tr>
                    <tr>
                        <td>Relative structure complexity</td>
                        <td>{{ root.bounds.getAverage('rsc') }}</td>
                    </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-3">
                <table class="table table-striped">
                    <tbody>
                    <tr>
                        <td>Lack of cohesion of methods</td>
                        <td>{{ root.bounds.getAverage('lcom') }}</td>
                    </tr>
                    <tr>
                        <td>Efferent Coupling</td>
                        <td>{{ root.bounds.getAverage('efferentCoupling') }}</td>
                    </tr>
                    <tr>
                        <td>Afferent Coupling</td>
                        <td>{{ root.bounds.getAverage('afferentCoupling') }}</td>
                    </tr>
                    <tr>
                        <td>Abstractness</td>
                        <td>{{ root.abstractness.abstractness }}</td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <!-- end: Volume -->

        <!-- Help -->
        <div class="tab" id="help">
            <div class="col-sm-12">
                <h3>Help</h3>
                <ul>
                    <li>You're using PhpMetrics {% include 'version.html.twig' %}</li>
                    <li>Online help is available on the <a href="http://www.phpmetrics.org/documentation/index.html">PhpMetrics website</a>.</li>
                    <li>Sources of PhpMetrics are available on <a href="https://github.com/PhpMetrics/PhpMetrics">Github</a>.</li>
                    <li>PhpMetrics is created by <a href="http://lepine.pro">Jean-François Lépine</a>.</li>
                </ul>
            </div>
        </div>
        <!-- end: Help -->

        <!-- Extensions blocks -->
        {{ extensions_content(extensions) }}
        <!-- end: Extensions -->

    </div>


    <div class="row footer">
        <div class="container">
            Powered by <a href="http://www.phpmetrics.org">PhpMetrics</a> {% include 'version.html.twig' %} - Copyright Jean-François Lépine
            <br/> Generated on {{"now"|date('jS \\o\\f F Y \\a\\t h:i:s A')}}
        </div>
    </div>

</div>







{% include "assets/functions.js.twig" %}
{# including assets. Deal with offline mode #}
{% if offline %}
    {% include "assets/d3js.js.twig" %}
    {% include "assets/nv.d3.min.js.twig" %}
    {% include "assets/d3js-radar.js.twig" %}
{% else %}
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="http://nvd3.org/assets/js/nv.d3.js" charset="utf-8"></script>
    <script src="https://cdn.rawgit.com/alangrafu/radar-chart-d3/master/src/radar-chart.min.js" charset="utf-8"></script>
{% endif %}
{% include "summary/report-score.js.twig" %}
{% include "summary/report-tabular.js.twig" %}
{% include "summary/report-maintainability.js.twig" %}
{% include "summary/report-custom.js.twig" %}
{% include "summary/report-abstractness.js.twig" %}
{% include "summary/report-relations.js.twig" %}


<script type="text/javascript">

    document.onreadystatechange = function() {
        if(document.readyState == 'complete') {
            // init tabs
            document.getElementById('link-overview').onclick = function() { displayTab(this, 'overview'); updateAbstractnessChart(); updateCustomChart(); updateMaintainabilityChart(); };
            document.getElementById('link-score').onclick = function() { displayTab(this, 'score'); updateScoreChart(); };
            document.getElementById('link-relations').onclick = function() { displayTab(this, 'relations'); updateRelationsChart(); };
            document.getElementById('link-explore').onclick = function() { displayTab(this, 'explore'); updateTableView(); };
            document.getElementById('link-repartition').onclick = function() { displayTab(this, 'repartition'); };
            document.getElementById('link-help').onclick = function() { displayTab(this, 'help')};
            document.getElementById('menu').firstElementChild.onclick();

            // selects
            document.getElementById('xAxis').value = xAxis;
            document.getElementById('yAxis').value = yAxis;
            document.getElementById('rAxis').value = rAxis;

            {{ extensions_js(extensions) }}
        }
    }


    // default selected elements
    var xAxis = 'lcom';
    var yAxis = 'cyclomaticComplexity';
    var rAxis = 'loc';



    {% autoescape false %}
    var data = {{ results | json_encode }}
    var groupedData = {{ groupedResults.asArray() | json_encode }}
    var ruleSet = {{ ruleSet.asArray() | json_encode }}
    {% endautoescape %}

    // accessibility for colorblinds
    var accessibilityEnabled = false;

    // fixes links to tab
    // Javascript to enable link to tab
//    var hash = document.location.hash;
//    var prefix = "tab_";
//    if (hash) {
//        $('#menu a[href='+hash.replace(prefix,"")+']').tab('show');
//    }
//    // Change hash for page-reload
//    $('#menu a').on('shown', function (e) {
//        window.location.hash = e.target.hash.replace("#", "#" + prefix);
//    });

</script>


</body>
</html>
